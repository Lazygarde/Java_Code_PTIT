import java.util.Scanner;

class Rectange {
    double w;
    double h;
    String color;

    void input(Scanner sc) {
        this.w = sc.nextDouble();
        this.h = sc.nextDouble();
        String s = sc.next();
        this.color = s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();
    }

    int check() {
        int W = (int) this.w;
        int H = (int) this.h;
        if (W != w || H != h || W <= 0 || H <= 0)
            return 0;
        return 1;
    }

    double findArea() {
        return w * h;
    }

    double findPerimeter() {
        return (w + h) * 2;
    }

    void output() {
        if (this.check() == 0)
            System.out.print("INVALID");
        else
            System.out.printf("%d %d %s", (int) this.findPerimeter(), (int) this.findArea(), this.color);
    }
}

public class Lazygarde {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Rectange rec = new Rectange();
        rec.input(sc);
        rec.output();
    }
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
